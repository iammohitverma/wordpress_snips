// used for both type of media queries | min & max
@mixin jn-standalone($properties, $media-type: min) {
    $breakpoints: (null, 576px, 768px, 992px, 1200px, 1400px);
    // Base styles (no media queries)
    @each $property, $vals in $properties {
        $value: nth($vals, 1); // Get the value for the first (base) breakpoint
        @if $value != null {
            #{$property}: $value;
        }
    }
    // Responsive styles
    @for $i from 2 through length($breakpoints) {
        $breakpoint: nth($breakpoints, $i);
        @if $breakpoint {
            @media (#{$media-type}-width: $breakpoint) {
                @each $property, $vals in $properties {
                    $value: nth($vals, $i);
                    @if $value != null {
                        #{$property}: $value;
                    }
                }
            }
        }
    }
}

// Advance
@mixin flexbox($properties...) {
    $flex-properties: (
        'flex-direction': flex-direction,
        'flex-wrap': flex-wrap,
        'justify-content': justify-content,
        'align-items': align-items,
        'align-content': align-content,
        'order': order,
        'flex-grow': flex-grow,
        'flex-shrink': flex-shrink,
        'flex-basis': flex-basis,
        'align-self': align-self
    );

    display: flex;

    @each $property in $properties {
        $name: nth($property, 1);
        $value: nth($property, 2);

        @if map-has-key($flex-properties, $name) {
        #{map-get($flex-properties, $name)}: $value;
        } @else {
        @warn "Unknown property `#{$name}` in flexbox mixin.";
        }
    }
}
  
